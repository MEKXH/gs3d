name: Build Multi-Platform Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
            arch: x86_64
          - os: windows-2022
            platform: windows
            arch: x86_64
          - os: macos-12
            platform: macos

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller boto3 tqdm

    - name: Build
      run: |
        pyinstaller --onefile --console --clean --name gs3d \
          --hidden-import=boto3 \
          --hidden-import=botocore \
          --hidden-import=tqdm \
          --hidden-import=urllib3 \
          --hidden-import=threading \
          --hidden-import=concurrent.futures \
          --exclude-module=tkinter \
          --exclude-module=matplotlib \
          --exclude-module=numpy \
          --exclude-module=pandas \
          src/G3SD.py
      shell: bash

    - name: Detect architecture (macOS)
      if: matrix.os == 'macos-12'
      id: macos_arch
      run: |
        arch=$(uname -m)
        echo "arch=$arch" >> $GITHUB_OUTPUT

    - name: Set output name
      id: output
      run: |
        if [ "${{ matrix.os }}" = "windows-2022" ]; then
          name="gs3d-${{ matrix.platform }}-${{ matrix.arch }}.exe"
          mv dist/gs3d.exe "dist/$name"
        elif [ "${{ matrix.os }}" = "macos-12" ]; then
          name="gs3d-${{ matrix.platform }}-${{ steps.macos_arch.outputs.arch }}"
          mv dist/gs3d "dist/$name"
        else
          name="gs3d-${{ matrix.platform }}-${{ matrix.arch }}"
          mv dist/gs3d "dist/$name"
        fi
        echo "name=$name" >> $GITHUB_OUTPUT
      shell: bash

    - name: Create checksum
      run: |
        cd dist
        if [ "${{ matrix.os }}" = "windows-2022" ]; then
          certutil -hashfile "${{ steps.output.outputs.name }}" SHA256 > "${{ steps.output.outputs.name }}.sha256"
        else
          sha256sum "${{ steps.output.outputs.name }}" > "${{ steps.output.outputs.name }}.sha256"
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.output.outputs.name }}
        path: |
          dist/${{ steps.output.outputs.name }}
          dist/${{ steps.output.outputs.name }}.sha256
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release

        # Copy all files from individual artifact folders
        for dir in artifacts/*; do
          if [ -d "$dir" ]; then
            cp -r "$dir"/* release/
          fi
        done

        # Create combined checksums.txt
        cat release/*.sha256 > release/checksums.txt
        rm release/*.sha256

        echo "Release files:"
        ls -la release/

    - name: Get version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: release/*
        body: |
          # GS3D - Generic S3 Downloader ${{ steps.get_version.outputs.VERSION }}

          ## Downloads

          - Windows: [gs3d-windows-x86_64.exe](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/gs3d-windows-x86_64.exe)
          - Linux: [gs3d-linux-x86_64](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/gs3d-linux-x86_64)
          - macOS: Available for Intel and Apple Silicon

          ## Usage

          ```bash
          # Download a file
          gs3d https://bucket.s3.amazonaws.com/file.txt

          # Anonymous access
          gs3d https://public-bucket.s3.amazonaws.com/file.txt -a
          ```

          SHA256 checksums available in [checksums.txt](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/checksums.txt)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}